@startuml class diagram
skinparam linetype ortho
' avoid problems with angled crows feet
' skinparam linetype ortho
' hide circle c
hide circle
' Hide the default visibility icons
skinparam classAttributeIconSize 0

'ok
class ProductMemberRole <<entity>> {
  - name: VARCHAR
  - code: VARCHAR
}

'ok
class Employee <<entity>> {
  - name: VARCHAR
  - email: VARCHAR
  - phone: VARCHAR
'   - employee_category_id: INT
}

'ok
class ProductMember <<entity>> {
'   - product_id: INT
'   - employee_id: INT
  - role: INT
}


class TicketMember <<entity>> {
    - ticket_id: INT
    - employee_id: INT
  }

together {
  'ok
  class Company <<entity>> {
    - name: VARCHAR
  }

  'ok
  class Product <<entity>> {
    - name: VARCHAR
    - description: TEXT
  '   - product_manager_id: INT
  '   - product_status_id: INT
  }
}


together {
  'ok
  class TicketCategory <<entity>> {
    - name: VARCHAR
  }
  'ok
  class TicketPriority <<entity>> {
    - name: VARCHAR
  }
  'ok
  class TicketStatus <<entity>> {
    - name: VARCHAR
  }
  
  class Ticket <<entity>> {
  '   - ticket_category_id: INT
  '   - ticket_priority_id: INT
  '   - ticket_status_id: INT
  '   - issue_by_user_id: INT
    - title: VARCHAR
    - description: TEXT
    - attachment: TEXT
  }

  'ok
  

}






class TicketController <<control>> {
    + create(title, description, attachment)
    + reject(ticket, reason)
    + revise(ticket, reason)
    + verify(ticket)
    + done(ticket)
    + close(ticket)
    + assign(ticket, employees)
    + list(ticket)
    + show(ticket)
}

together {
  class TicketListPage <<boundary>> {
      + list(ticket)
      + redirectCreate()
      + redirectDetail(ticket)
  }

  class TicketCreatePage <<boundary>> {
    + create(title, description, attachment)
  } 

}


TicketListPage -->  TicketCreatePage
TicketListPage -->  TicketDetailsPage
TicketListPage -->  TicketController
TicketCreatePage -->  TicketController
TicketDetailsPage -->  TicketController
TicketDetailsPage -->  TicketRejectForm
TicketDetailsPage -->  TicketReviseForm
TicketDetailsPage -->  TicketVerifyForm

class TicketDetailsPage <<boundary>> {
    + show(ticket)
    + redirectReject()
    + redirectRevise()
    + redirectVerify(ticket)
    + done(ticket)
    + close(ticket)
}

together {



  class TicketRejectForm <<boundary>> {
    + reject(ticket, reason)
  }
  TicketRejectForm -->  TicketController

  class TicketReviseForm <<boundary>> {
    + reject(ticket, reason)
  }
  

  class TicketVerifyForm <<boundary>> {
    + verify(ticket)
    + assign(ticket, employees)
  }
}

TicketReviseForm -->  TicketController
TicketVerifyForm -->  TicketController




TicketController -->  Ticket
TicketCategory "1" *-- "n" Ticket : Categorizes
TicketPriority "1" *-- "n" Ticket : Categorizes
TicketStatus "1" *-- "n" Ticket : Categorizes
' EmployeeCategory "1" *-- "n" Employee : Categorizes
ProductMemberRole "1" *-- "n" ProductMember : Specifies
Company "1" *-up- "n" Product : create
Product "1" *-up- "n" ProductMember : Employs
Employee "1" *-- "n" ProductMember : Works
Employee "1" --right-- "1" Product : Manages
Company "1" *-right-- "n" Employee : Employs
Product "1" *-- "n" Ticket : Issues
' Ticket "m" --- "n" ProductMember : Assigned to
Ticket "1" *-right-- "n" TicketMember : Assigned to
ProductMember "1" *-left-- "n"  TicketMember: Assigned to
' ProductStatus  "1" *-- "n" Product : Categorizes
